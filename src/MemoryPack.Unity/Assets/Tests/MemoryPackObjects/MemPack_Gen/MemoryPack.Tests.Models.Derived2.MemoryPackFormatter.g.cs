
// <auto-generated/>
#nullable enable
#pragma warning disable CS0108 // hides inherited member
#pragma warning disable CS0162 // Unreachable code
#pragma warning disable CS0164 // This label has not been referenced
#pragma warning disable CS0219 // Variable assigned but never used
#pragma warning disable CS0618 // Type or member is obsolete
#pragma warning disable CS8600 // Converting null literal or possible null value to non-nullable type.
#pragma warning disable CS8601 // Possible null reference assignment
#pragma warning disable CS8602
#pragma warning disable CS8604 // Possible null reference argument for parameter
#pragma warning disable CS8619
#pragma warning disable CS8620
#pragma warning disable CS8631 // The type cannot be used as type parameter in the generic type or method
#pragma warning disable CS8765 // Nullability of type of parameter
#pragma warning disable CS9074 // The 'scoped' modifier of parameter doesn't match overridden or implemented member
#pragma warning disable CA1050 // Declare types in namespaces.

using System;
using MemoryPack;

namespace MemoryPack.Tests.Models {

/// <remarks>
/// MemoryPack GenerateType: Object<br/>
/// <code>
/// <b>int</b> MyProperty1<br/>
/// <b>int</b> MyProperty2<br/>
/// <b>int</b> DerivedProp1<br/>
/// <b>int</b> DerivedProp2<br/>
/// <b>int</b> Derived2Prop1<br/>
/// <b>int</b> Derived2Prop2<br/>
/// </code>
/// </remarks>
partial class Derived2 : IMemoryPackable<Derived2>
{

    static partial void StaticConstructor();

    static Derived2()
    {
        RegisterFormatter();
        StaticConstructor();
    }

    [global::MemoryPack.Internal.Preserve]
    public static void RegisterFormatter()
    {
        if (!global::MemoryPack.MemoryPackFormatterProvider.IsRegistered<Derived2>())
        {
            global::MemoryPack.MemoryPackFormatterProvider.Register(new Derived2Formatter());
        }
        if (!global::MemoryPack.MemoryPackFormatterProvider.IsRegistered<Derived2[]>())
        {
            global::MemoryPack.MemoryPackFormatterProvider.Register(new global::MemoryPack.Formatters.ArrayFormatter<Derived2>());
        }

    }

    [global::MemoryPack.Internal.Preserve]
    public static void Serialize<TBufferWriter>(ref MemoryPackWriter<TBufferWriter> writer, ref Derived2? value) where TBufferWriter : class, System.Buffers.IBufferWriter<byte>
    {

        if (value == null)
        {
            writer.WriteNullObjectHeader();
            goto END;
        }

        writer.WriteUnmanagedWithObjectHeader(6, value.@MyProperty1, value.@MyProperty2, value.@DerivedProp1, value.@DerivedProp2, value.@Derived2Prop1, value.@Derived2Prop2);

    END:

        return;
    }

    [global::MemoryPack.Internal.Preserve]
    public static void Deserialize(ref MemoryPackReader reader, ref Derived2? value)
    {

        if (!reader.TryReadObjectHeader(out var count))
        {
            value = default!;
            goto END;
        }



        int __MyProperty1;
        int __MyProperty2;
        int __DerivedProp1;
        int __DerivedProp2;
        int __Derived2Prop1;
        int __Derived2Prop2;

        
        if (count == 6)
        {
            if (value == null)
            {
                reader.ReadUnmanaged(out __MyProperty1, out __MyProperty2, out __DerivedProp1, out __DerivedProp2, out __Derived2Prop1, out __Derived2Prop2);


                goto NEW;
            }
            else
            {
                __MyProperty1 = value.@MyProperty1;
                __MyProperty2 = value.@MyProperty2;
                __DerivedProp1 = value.@DerivedProp1;
                __DerivedProp2 = value.@DerivedProp2;
                __Derived2Prop1 = value.@Derived2Prop1;
                __Derived2Prop2 = value.@Derived2Prop2;

                reader.ReadUnmanaged(out __MyProperty1);
                reader.ReadUnmanaged(out __MyProperty2);
                reader.ReadUnmanaged(out __DerivedProp1);
                reader.ReadUnmanaged(out __DerivedProp2);
                reader.ReadUnmanaged(out __Derived2Prop1);
                reader.ReadUnmanaged(out __Derived2Prop2);

                goto SET;
            }

        }
        else if (count > 6)
        {
            MemoryPackSerializationException.ThrowInvalidPropertyCount(typeof(Derived2), 6, count);
            goto READ_END;
        }
        else
        {
            if (value == null)
            {
               __MyProperty1 = default!;
               __MyProperty2 = default!;
               __DerivedProp1 = default!;
               __DerivedProp2 = default!;
               __Derived2Prop1 = default!;
               __Derived2Prop2 = default!;
            }
            else
            {
               __MyProperty1 = value.@MyProperty1;
               __MyProperty2 = value.@MyProperty2;
               __DerivedProp1 = value.@DerivedProp1;
               __DerivedProp2 = value.@DerivedProp2;
               __Derived2Prop1 = value.@Derived2Prop1;
               __Derived2Prop2 = value.@Derived2Prop2;
            }


            if (count == 0) goto SKIP_READ;
            reader.ReadUnmanaged(out __MyProperty1); if (count == 1) goto SKIP_READ;
            reader.ReadUnmanaged(out __MyProperty2); if (count == 2) goto SKIP_READ;
            reader.ReadUnmanaged(out __DerivedProp1); if (count == 3) goto SKIP_READ;
            reader.ReadUnmanaged(out __DerivedProp2); if (count == 4) goto SKIP_READ;
            reader.ReadUnmanaged(out __Derived2Prop1); if (count == 5) goto SKIP_READ;
            reader.ReadUnmanaged(out __Derived2Prop2); if (count == 6) goto SKIP_READ;

    SKIP_READ:
            if (value == null)
            {
                goto NEW;
            }
            else
            {
                goto SET;
            }

        }

    SET:
        
        value.@MyProperty1 = __MyProperty1;
        value.@MyProperty2 = __MyProperty2;
        value.@DerivedProp1 = __DerivedProp1;
        value.@DerivedProp2 = __DerivedProp2;
        value.@Derived2Prop1 = __Derived2Prop1;
        value.@Derived2Prop2 = __Derived2Prop2;
        goto READ_END;

    NEW:
        value = new Derived2()
        {
            @MyProperty1 = __MyProperty1,
            @MyProperty2 = __MyProperty2,
            @DerivedProp1 = __DerivedProp1,
            @DerivedProp2 = __DerivedProp2,
            @Derived2Prop1 = __Derived2Prop1,
            @Derived2Prop2 = __Derived2Prop2
        };

    READ_END:

    END:

        return;
    }
}
partial class Derived2
{
    [global::MemoryPack.Internal.Preserve]
    sealed class Derived2Formatter : MemoryPackFormatter<Derived2>
    {
        [global::MemoryPack.Internal.Preserve]
        public override void Serialize<TBufferWriter>(ref MemoryPackWriter<TBufferWriter> writer,  ref Derived2 value)
        {
            Derived2.Serialize(ref writer, ref value);
        }

        [global::MemoryPack.Internal.Preserve]
        public override void Deserialize(ref MemoryPackReader reader, ref Derived2 value)
        {
            Derived2.Deserialize(ref reader, ref value);
        }
    }
}
}
